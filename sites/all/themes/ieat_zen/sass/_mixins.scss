// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Define resolutions of various sizes of screens.
@mixin small-screen {
  @media all and (max-width: 860px) and (min-device-width : 1025px),
      only screen and (max-device-width : 767px) {
    @content;
  }
}
@mixin middle-screen {
  @media all and (min-width: 861px) and (max-width: 1200px) and (min-device-width : 1025px),
      only screen and (min-device-width : 768px) and (max-device-width : 1024px),
      only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (-webkit-min-device-pixel-ratio: 1) {
    @content;
  }
}
@mixin large-screen {
  @media all and (min-width: 1201px) and (min-device-width : 1025px) {
    @content;
  }
}

@mixin middle-large-screen {
  @include middle-screen {
    @content;
  }
  @include large-screen {
    @content;
  }
}
@mixin small-middle-screen {
  @include small-screen {
    @content;
  }
  @include middle-screen {
    @content;
  }
}